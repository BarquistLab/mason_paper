}
# show the sign. genes:
if(show_sig){
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
top_up <- restab[ which(restab$FDR < alpha & restab$logFC > minlogfc),]
top_down <- restab[ which(restab$FDR < alpha & restab$logFC < -(minlogfc)),]
if (length(rownames(top_up)) > 0 && (length(rownames(top_up)) > 3)){
logFC.scaled <- range01(top_up$logFC)
FDR.scaled <- range01(-log(top_up$FDR))
summ <- (logFC.scaled + FDR.scaled)
top_up <- top_up[order(-summ),][1:3,]
}
if (length(rownames(top_down))>0 && (length(rownames(top_down))> 3)){
logFC.scaled <- range01(-top_down$logFC)
FDR.scaled <- range01(-log(top_down$FDR))
summ <- (logFC.scaled + FDR.scaled)
top_down <- top_down[order(-summ),][1:3,]
}
top_peaks <- rbind(top_up, top_down)
top_peaks <- na.omit(top_peaks)
g <- g + geom_label_repel(
data = top_peaks ,
aes(x = logFC, y = -log10(FDR),
label = rownames(top_peaks)),
hjust = 0.1,
#vjust = 2,
size = 5, segment.alpha = 0.5, segment.color = "black", min.segment.length=unit(0, "cm"), parse = T)
}
g <- g + geom_point(
data = restab[targetgene,],
aes(x = logFC, y = -log10(FDR)),
color = "red",
cex = pointsize)
g
}
list_ot_0 <- list()
list_ot_1 <- list()
list_ot_2 <- list()
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3))#,
# off_target_list = off_targets))
hist(restab$PValue, breaks=100, main=resname)
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
de_tmm_adj <- lapply(all_res_tmm, function(x) dim(x$table[x$table$FDR < 0.001 & abs(x$table$logFC) > 1,]))
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3))#,
# off_target_list = off_targets))
hist(restab$PValue, breaks=100, main=resname)
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
resname
startot
knitr::opts_chunk$set(echo = TRUE, warning = TRUE)
library(edgeR)
library(circlize)
library(dplyr)
library(ggplot2)
library('RUVSeq')
library(RColorBrewer)
library(oligo)
library(EDASeq)
library(gplots)
library(ggrepel)
library(svglite)
library(ComplexHeatmap)
library(VennDiagram)
library(eulerr)
library(tidyverse)
library(grid)
GenewiseCounts <- read.delim(
"../data/rna_align/counttable.txt",sep = "\t",
row.names = 1, header = T, comment.char = "#")
dim(GenewiseCounts)
head(GenewiseCounts[,1:6])
gwc <- GenewiseCounts[,5:length(GenewiseCounts[1,])]
pnapat <- "\\.\\.\\.data\\.rna_align\\..*_(\\d)_(.*)\\.bam"
colnames (gwc) <- gsub(pnapat,"\\2_\\1", colnames(gwc))
newnames <- read.delim("../data/samples/samples.tsv", header = F)
newnames <- unlist(newnames)
names(newnames) <- NULL
newnames <- gsub("-", "_", newnames)
colnames(gwc) <- c("Length",newnames)
# take only MH data to start:
gwc <- gwc[,1:31]
newnames <- newnames[1:30]
colnames (gwc)
gwc_lexogen <- gwc
# select controls:
ctrl_raw <- gwc[,grepl("control_\\d$|Length$", colnames (gwc))]
gene_lengths <- ctrl_raw$Length
raw_ctrl_counts <- ctrl_raw[,2:3]
norm_length <- data.frame(sapply(raw_ctrl_counts, function(x) x / gene_lengths))
tpm_matrix <- data.frame(sapply(norm_length, function(x) x * 1e6 / sum(x)), row.names = rownames(ctrl_raw))
pairs(log(tpm_matrix))
tpm_matrix$genename <- alt_names
resname
names(res_acpP_mutants)
targetgene <- gsub("_vs_ctrl", "" , resname)
startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
list_ot_0
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
list_ot_1
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
list_ot_2
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
off_targets
print(do_volcano(restab, tgene_lt, title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
do_volcano(restab, tgene_lt, title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets)
targetgene
do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets)
do_volcano(restab, "", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets)
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3))#,
# off_target_list = off_targets))
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3))#,
# off_target_list = off_targets))
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3))#,
# off_target_list = off_targets))
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.001, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.01, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
list_ot_0 <- list()
list_ot_1 <- list()
list_ot_2 <- list()
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.01, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "", title=resname,
x_limit = 9,
y_limit = 26,
alpha=0.01, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
de_tmm_adj <- lapply(all_res_tmm, function(x) dim(x$table[x$table$FDR < 0.001 & abs(x$table$logFC) > 1,]))
list_ot_0 <- list()
list_ot_1 <- list()
list_ot_2 <- list()
for (resname in names(res_acpP_mutants)){
# adjust p-values FDR
res_acpP_mutants[[resname]]$table$FDR <- p.adjust(res_acpP_mutants[[resname]]$table$PValue, method = "fdr")
restab <- res_acpP_mutants[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "SL1344_1133", title=resname,
x_limit = 5,
y_limit = 10,
alpha=0.01, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
for (resname in names(res_mismatch_pnas)){
# adjust p-values FDR
res_mismatch_pnas[[resname]]$table$FDR <- p.adjust(res_mismatch_pnas[[resname]]$table$PValue, method = "fdr")
restab <- res_mismatch_pnas[[resname]]$table
restab$genes <- rownames(restab)
hist(restab$PValue, breaks=100, main=resname)
# check for off-targets (with 0 mismatches):
targetgene <- gsub("_vs_ctrl", "" , resname)
offt_zero_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==0) %>%
select(trans_id) %>% unlist
list_ot_0[[targetgene]] <- offt_zero_mm
offt_one_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==1) %>%
select(trans_id) %>% unlist
list_ot_1[[targetgene]] <- offt_one_mm
offt_two_mm <- startot %>% filter(grepl(targetgene, probe_id) & num_mismatch==2) %>%
select(trans_id) %>% unlist
list_ot_2[[targetgene]] <- offt_two_mm
off_targets <- list(zero = offt_zero_mm, one = offt_one_mm, two = offt_two_mm)
#tgene_lt <- gsub(".*(ECP_.+)", "\\1", startot[grepl(targetgene, startot$probe_id),4][1])
# make volcanos:
pdf(paste0("../analysis/volcanoplots_bc/",resname, ".pdf"))
print(do_volcano(restab, "", title=resname,
x_limit = 5,
y_limit = 10,
alpha=0.01, pointsize = 3,
off_target_list = off_targets))
dev.off()
#pval distributions:
hist(restab$PValue, breaks=100, main=resname)
#save result_table:
dataname <- paste("../analysis/diff_exp_rawdata/", resname, ".csv", sep = "")
write.csv(restab[order(restab$FDR),], dataname)
}
de_tmm_adj <- lapply(all_res_tmm, function(x) dim(x$table[x$table$FDR < 0.001 & abs(x$table$logFC) > 1,]))
